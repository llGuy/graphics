
config.cpp,1401
enum class Token_Type 7,213
enum class Token_Type { KEYWORD7,213
			, CONSTANT8,246
			, ENTRY_ID9,261
			, OPERATOR10,276
			, NOT_DETERMINED_YET}NOT_DETERMINED_YET11,291
enum class Constant_Type 13,320
enum class Constant_Type { NAME 13,320
			   , NUMBER 14,354
enum Operator_Type 16,399
enum Operator_Type :s8 { COLON=16,399
			 , EQUAL=17,435
			 , COMMA=18,452
			 , OPEN_SQUARE=19,469
			 , CLOSE_SQUARE=20,492
			 , DOLLAR=21,516
			 , OPEN_BRACK=22,534
			 , CLOSE_BRACK=23,556
struct Token25,584
    const char *tk_bgn;tk_bgn27,601
    s32 tk_len;28,639
    Token_Type type 29,656
struct Attribute32,717
    Token *id;id34,738
    Memory_Buffer_View<Token *> data;35,754
struct Entry38,799
    Token *id;id40,816
    Memory_Buffer_View<Attribute> atrbs;41,832
struct Config_Attribute_Proc44,880
    void *proc;proc46,913
    const char *str;str47,930
    s32 str_len;48,952
    void *usr_data;usr_data50,972
struct MAC_Definition53,999
    Token *MAC_id;MAC_id55,1025
    Memory_Buffer_View<Token *> params;56,1045
struct Config_Parser59,1092
    const char *cfgs;cfgs61,1117
    Hash_Table_Inline<Hash_Table_Inline63,1142
    Hash_Table_Inline<MAC_Definition, 7, 3, 3> *mac_lkup_tbl;mac_lkup_tbl63,1142
    Memory_Buffer_View<Token> tks;65,1211
begin_proc_init(69,1259
push_proc(75,1302
end_proc_init(81,1339
open_config_file(87,1380

core.cpp,762
#define DEBUG_FILE 16,222
Linear_Allocator linear_allocator_global;19,255
Stack_Allocator stack_allocator_global;20,298
Free_List_Allocator free_list_allocator_global;21,339
Debug_Output output_file;23,390
Window_Data window;24,417
internal bool running;26,440
open_debug_file(29,481
close_debug_file(36,611
output_debug(42,685
allocate_linear(59,930
clear_linear(73,1217
allocate_stack(79,1320
extend_stack_top(116,2766
pop_stack(124,2995
init_free_list_allocator_head(150,3857
allocate_free_list(157,4118
deallocate_free_list(207,6154
#define MAX_KEYS 293,9455
#define MAX_MB 294,9477
glfw_window_resize_proc(297,9512
glfw_keyboard_input_proc(306,9740
glfw_mouse_position_proc(317,10082
glfw_mouse_button_proc(326,10308
main(340,10655

file_system.cpp,247
global_var const char *virtual_file_path virtual_file_path6,100
global_var Free_List_Allocator file_proc_allocator;7,148
mount_virtual_file_path(12,320
read_binary(18,499
read_image(39,1021
read_file_data(62,1663
destroy_file_data(74,1932

load.cpp,1212
process_vertex(11,151
split(39,1036
break_face_line(50,1301
create_model(89,2870
    enum :u32 u3298,3185
    enum :u32 {POSITION,POSITION98,3185
    enum :u32 {POSITION, NORMAL,98,3185
    enum :u32 {POSITION, NORMAL, UVS,98,3185
    enum :u32 {POSITION, NORMAL, UVS, TANGENT}TANGENT98,3185
load_model_from_obj(177,6933
get_terrain_index(272,9191
load_3D_terrain_mesh(278,9281
    enum :u32 u32336,11905
    enum :u32 {GROUND_BASE_XY_VALUES_BND GROUND_BASE_XY_VALUES_BND336,11905
    enum :u32 {GROUND_BASE_XY_VALUES_BND = 0, HEIGHT_BND 336,11905
    enum :u32 {GROUND_BASE_XY_VALUES_BND = 0, HEIGHT_BND = 1, GROUND_BASE_XY_VALUES_ATT 336,11905
    enum :u32 {GROUND_BASE_XY_VALUES_BND = 0, HEIGHT_BND = 1, GROUND_BASE_XY_VALUES_ATT = 0, HEIGHT_ATT 336,11905
load_3D_terrain_mesh_instance(351,13063
    enum :u32 u32368,13819
    enum :u32 {GROUND_BASE_XY_VALUES_BND GROUND_BASE_XY_VALUES_BND368,13819
    enum :u32 {GROUND_BASE_XY_VALUES_BND = 0, HEIGHT_BND 368,13819
    enum :u32 {GROUND_BASE_XY_VALUES_BND = 0, HEIGHT_BND = 1, GROUND_BASE_XY_VALUES_ATT 368,13819
    enum :u32 {GROUND_BASE_XY_VALUES_BND = 0, HEIGHT_BND = 1, GROUND_BASE_XY_VALUES_ATT = 0, HEIGHT_ATT 368,13819

rendering.cpp,3902
namespace Rendering8,156
    init_model_info(12,205
	struct Vertex 26,905
	struct Vertex { glm::vec3 pos;26,905
	struct Vertex { glm::vec3 pos; glm::vec3 color;26,905
	struct Vertex { glm::vec3 pos; glm::vec3 color; glm::vec2 uvs;26,905
    init_graphics_pipeline(42,1467
    init_descriptor_set_layout(173,7413
    init_command_pool(191,8197
    init_object_texture(202,8571
    init_vbo(288,11575
	struct Vertex 290,11618
	struct Vertex { glm::vec3 pos,290,11618
	struct Vertex { glm::vec3 pos, color;290,11618
	struct Vertex { glm::vec3 pos, color; glm::vec2 uvs;290,11618
    persist u32 mesh_indices[mesh_indices329,12959
    init_ibo(351,13191
    init_ubos(374,14074
	struct Uniform_Buffer_Object378,14207
    struct Uniform_Buffer_Object408,15042
    init_descriptor_pool(421,15241
    init_descriptor_sets(436,15989
    internal constexpr u32 MAX_FRAMES_IN_FLIGHT 491,18371
    init_sync(494,18447
    init_rendering_state(511,19273
    struct Material560,20853
	Vulkan_API::Registered_Model model;566,21013
	Vulkan_API::Draw_Indexed_Data draw_info;567,21051
    struct Renderer 575,21456
	Vulkan_API::Registered_Graphics_Pipeline ppln;578,21544
	Memory_Buffer_View<VkDescriptorSet> sets;579,21593
	VkShaderStageFlags mtrl_unique_data_stage_dst;580,21637
	Memory_Buffer_View<Material> mtrls;582,21689
	u32 mtrl_count;584,21730
	enum Render_Method 586,21750
	enum Render_Method { INLINE,586,21750
	enum Render_Method { INLINE, INSTANCED 586,21750
	enum Render_Method { INLINE, INSTANCED } mthd;586,21750
	VkCommandBuffer rndr_cmdbuf;589,21913
	init(592,21954
	update(627,22985
    global_var struct Render_System680,24386
	Memory_Buffer_View<Renderer> rndrs;685,24506
	u32 rndr_count;686,24544
	Hash_Table_Inline<Hash_Table_Inline687,24562
	Hash_Table_Inline<s32, 30, 4, 3> rndr_id_map;687,24562
	Vulkan_API::Registered_Render_Pass deferred_rndr_pass;690,24614
	Vulkan_API::Registered_Framebuffer fbos;692,24674
	Vulkan_API::Registered_Graphics_Pipeline deferred_pipeline;694,24720
	Vulkan_API::Registered_Descriptor_Set_Layout deferred_descriptor_set_layout;695,24782
	Vulkan_API::Registered_Descriptor_Set deferred_descriptor_set;696,24861
	Vulkan_API::Registered_Buffer ppfx_quad;698,24928
	Render_System(701,24977
	init_system(704,25028
	add_renderer(712,25194
	update(719,25424
	init_material(766,27076
    } rndr_sys;784,27577
    init_deferred_render_pass(787,27606
	enum G_Buffer_Attachment 794,27890
	enum G_Buffer_Attachment :u32 {FINAL_ATTACHMENTFINAL_ATTACHMENT794,27890
				       , ALBEDO_ATTACHMENT795,27940
				       , DEPTH_ATTACHMENT796,27972
				       , INVALID_ATTACHMENT}INVALID_ATTACHMENT797,28003
	enum G_Buffer_Reference 846,30295
	enum G_Buffer_Reference :u32 {FINAL_REFERENCEFINAL_REFERENCE846,30295
				      , ALBEDO_REFERENCE847,30343
				      , DEPTH_REFERENCE848,30373
				      , INVALID_REFERENCE}INVALID_REFERENCE849,30402
	enum Subpass_Stage 861,31274
	enum Subpass_Stage :u32 {G_BUFFER_INIT,G_BUFFER_INIT861,31274
	enum Subpass_Stage :u32 {G_BUFFER_INIT, LIGHTING,861,31274
	enum Subpass_Stage :u32 {G_BUFFER_INIT, LIGHTING, INVALID_STAGE}INVALID_STAGE861,31274
    init_deferred_fbos(912,33611
	enum class G_Buffer_Attachment 916,33766
	enum class G_Buffer_Attachment :u32 {FINAL,FINAL916,33766
	enum class G_Buffer_Attachment :u32 {FINAL, ALBEDO,916,33766
	enum class G_Buffer_Attachment :u32 {FINAL, ALBEDO, POSITION,916,33766
	enum class G_Buffer_Attachment :u32 {FINAL, ALBEDO, POSITION, NORMAL,916,33766
	enum class G_Buffer_Attachment :u32 {FINAL, ALBEDO, POSITION, NORMAL, DEPTH,916,33766
	enum class G_Buffer_Attachment :u32 {FINAL, ALBEDO, POSITION, NORMAL, DEPTH, INVALID}INVALID916,33766
    init_deferred_ppln(977,35995
    init_rendering_system(1151,44862
    add_renderer(1161,45209
    update_renderers(1167,45380
    init_material(1177,45738

scene.cpp,1890
#define MAX_ENTITIES_UNDER_TOP 12,289
#define MAX_ENTITIES_UNDER_PLANET 13,324
constexpr f32 PI 15,365
typedef struct Entity_View18,424
    s32 id 21,563
    enum Is_Group 23,586
    enum Is_Group { IS_NOT_GROUP 23,586
		    , IS_GROUP 24,628
    Entity_View(26,670
} Entity_View, Entity_Group_View;27,739
#define MAX_ENTITIES 29,776
typedef struct Entity31,804
    enum Is_Group 33,830
    enum Is_Group { IS_NOT_GROUP 33,830
		    , IS_GROUP 34,872
    } push_k;47,1266
    Entity_View above;50,1387
    Entity_View index;51,1411
    using Entity_State_Flags 53,1437
    enum {GROUP_PHYSICS_INFO_HAS_BEEN_UPDATED_BIT GROUP_PHYSICS_INFO_HAS_BEEN_UPDATED_BIT54,1474
    Entity_State_Flags flags{flags55,1536
	    Rendering::Material_Access mtrl_access;63,1695
	    u32 below_count;68,1761
	    Memory_Buffer_View<Entity_View> below;69,1784
} Entity, Entity_Group;72,1842
construct_entity(75,1877
global_var struct Entities90,2164
    s32 count_singles 92,2195
    Entity list_singles[list_singles93,2224
    s32 count_groups 95,2271
    Entity_Group list_groups[list_groups96,2299
    Hash_Table_Inline<Hash_Table_Inline98,2341
} entities;101,2471
global_var Entity_View scene_graph;104,2529
get_entity(107,2587
get_entity(114,2760
get_entity_group(120,2857
get_entity_group(127,3029
add_entity(133,3140
add_entity_group(161,3845
init_scene_graph(194,4745
make_entity_renderable(208,5211
make_entity_instanced_renderable(223,5702
update_entity_group(230,5930
update_scene_graph(250,6559
Camera::set_default(set_default274,7113
Camera::compute_projection(compute_projection288,7371
Camera::compute_view(compute_view294,7464
init_scene(300,7543
update_ubo(388,10647
    struct Uniform_Buffer_Object394,10823
record_cmd(430,12027
render_frame(463,13298
update_scene(528,15894
handle_input(541,16172
#define SENSITIVITY 547,16280

vulkan.cpp,2727
#define GLFW_INCLUDE_VULKAN2,21
namespace Vulkan_API10,171
    struct Object_Register_Info13,198
	void *p;p16,262
	u32 size;17,305
    global_var Free_List_Allocator object_allocator;20,327
    global_var Hash_Table_Inline<Hash_Table_Inline21,381
    init_manager(24,522
    register_object(35,938
    get_object(50,1322
    remove_object(63,1597
    decrease_shared_count(77,1878
    increase_shared_count(84,2036
    namespace Memory90,2188
	find_memory_type_according_to_requirements(94,2234
	allocate_gpu_memory(120,3011
    GPU::find_queue_families(find_queue_families141,3651
    struct Instance_Create_Validation_Layer_Params184,4777
	bool r_enable;186,4836
	u32 o_layer_count;187,4853
	const char **o_layer_names;o_layer_names188,4874
    struct Instance_Create_Extension_Params191,4914
	u32 r_extension_count;193,4966
	const char **r_extension_names;r_extension_names194,4991
    init_instance(199,5145
    vulkan_debug_proc(247,6738
    init_debug_messenger(259,7190
    get_swapchain_support(280,8245
    struct Physical_Device_Extensions_Params310,9747
	u32 r_extension_count;312,9800
	const char **r_extension_names;r_extension_names313,9825
    check_if_physical_device_supports_extensions(317,9888
    check_if_physical_device_is_suitable(355,11033
    choose_gpu(387,12135
    init_device(428,13230
    choose_surface_format(497,15616
    choose_surface_present_mode(520,16265
    choose_swapchain_extent(542,16854
    init_image(563,17545
    init_image_view(602,18822
    init_image_sampler(623,19566
    begin_command_buffer(661,21035
    allocate_command_buffers(675,21483
    submit(692,22077
    has_stencil_component(715,22967
    init_single_use_command_buffer(721,23128
    destroy_single_use_command_buffer(736,23520
    transition_image_layout(756,24185
    copy_buffer_into_image(845,27019
    copy_buffer(883,28033
    invoke_staging_buffer_for_device_local_buffer(907,28561
    init_swapchain(947,29847
    init_render_pass(1024,32862
    find_supported_format(1045,33944
    find_depth_format(1073,34731
    init_shader(1090,35117
    init_pipeline_layout(1108,35650
    init_graphics_pipeline(1127,36300
    allocate_command_pool(1171,38130
    init_framebuffer_attachment(1184,38535
    init_framebuffer(1219,39685
    allocate_descriptor_sets(1259,41100
    init_descriptor_pool(1282,42066
    init_descriptor_set_layout(1298,42557
    update_descriptor_sets(1311,43063
    init_buffer(1322,43331
    command_buffer_begin_render_pass(1349,44244
    command_buffer_next_subpass(1373,45074
    present(1381,45241
    init_state(1400,45889
    destroy_debug_utils_messenger_ext(1475,48621
    destroy_state(1487,49006

core.hpp,3470
#define DEBUG 11,143
typedef int8_t s8;13,165
typedef int16_t s16;14,185
typedef int32_t s32;15,207
typedef int64_t s64;16,229
typedef uint8_t u8;18,253
typedef uint16_t u16;19,274
typedef uint32_t u32;20,297
typedef uint64_t u64;21,320
typedef float f32;23,345
typedef double f64;24,365
typedef u8 byte;26,388
#define FORCEINLINE 29,425
#define FORCEINLINE 31,460
#define MAX(34,505
#define MIN(35,550
#define VK_CHECK(37,597
#define OUTPUT_DEBUG_LOG(48,883
#define persist 53,1071
#define internal 54,1095
#define global_var 55,1120
struct Memory_Buffer_View58,1172
    u32 count;60,1202
    T *buffer;buffer61,1218
    zero(64,1246
left_shift(83,1498
extern struct Debug_Output88,1545
    FILE *fp;fp90,1576
} output_file;91,1591
struct Window_Data97,1665
    s32 w,99,1688
    s32 w, h;99,1688
    struct GLFWwindow *window;window100,1703
    f32 dt 101,1735
    Memory_Buffer_View<bool> key_map;103,1757
    Memory_Buffer_View<bool> mb_map;104,1796
    s32 m_x 106,1836
    s32 m_y 107,1854
    bool m_moved 109,1874
    bool window_resized 110,1901
using Alignment 113,1941
extern struct Linear_Allocator115,1966
    void *start start117,2001
    void *current current118,2029
    u32 capacity;120,2061
} linear_allocator_global;121,2080
struct Stack_Allocation_Header132,2349
    const char *allocation_name;allocation_name135,2399
    u32 size;138,2451
    void *prev;prev139,2466
extern struct Stack_Allocator142,2489
    void *start start144,2523
    void *current current145,2551
    u32 allocation_count 147,2587
    u32 capacity;148,2618
} stack_allocator_global;149,2637
struct Free_Block_Header166,3149
    Free_Block_Header *next_free_block next_free_block168,3178
    u32 free_block_size 169,3229
struct Free_List_Allocation_Header172,3265
    u32 size;174,3304
    const char *name;name176,3330
extern struct Free_List_Allocator180,3367
    Free_Block_Header *free_block_head;free_block_head182,3405
    void *start;start184,3452
    u32 available_bytes;185,3470
    u32 allocation_count 187,3498
} free_list_allocator_global;188,3529
struct File_Contents200,3862
    u32 size;202,3887
    byte *content;content203,3902
read_file(207,3952
get_alignment_adjust(234,4549
destroy(246,4852
kilobytes(258,4997
megabytes(264,5070
struct Bitset_32273,5181
    u32 bitset 275,5202
    pop_count(278,5241
    set1(288,5394
    set0(294,5475
    get(300,5559
struct Constant_String306,5632
    const char* str;308,5659
    u32 size;309,5681
    u32 hash;310,5696
    operator==(operator==313,5730
compile_hash(317,5849
operator""_hasoperator""_ha323,6040
init_const_str(329,6213
template <typename T335,6374
	  , u32 Bucket_Count336,6396
	  , u32 Bucket_Size337,6419
	  , u32 Bucket_Search_Count> struct Hash_Table_Inline338,6441
    enum { UNINITIALIZED_HASH 340,6500
    enum { ITEM_POUR_LIMIT 341,6547
    struct Item343,6605
    struct Bucket349,6689
    const char *map_debug_name;map_debug_name355,6787
    Bucket buckets[buckets356,6820
    Hash_Table_Inline(358,6862
    insert(361,6941
    remove(390,7851
    get(413,8395
null_buffer(439,9110
single_buffer(442,9240
allocate_memory_buffer(445,9342
allocate_memory_buffer_tmp(452,9530
struct Memory_Byte_Buffer458,9691
    u32 size;460,9721
    void *ptr;ptr461,9736
template <typename T,465,9791
loop_through_memory(466,9834
const glm::mat4x4 IDENTITY_MAT4X4 477,10020

file_system.hpp,725
enum File_Format7,166
    BINARY9,187
    , PNG10,199
    , JPG11,210
    , WAV12,221
struct File15,238
    const char *file_path;file_path17,254
    File_Format format;18,282
struct File_Data21,313
    void *data;data23,334
    u32 size;24,351
    File description;26,368
    enum Extra_Data 29,425
    enum Extra_Data { WIDTH,29,425
    enum Extra_Data { WIDTH, HEIGHT,29,425
    enum Extra_Data { WIDTH, HEIGHT, CHANNELS,29,425
    enum Extra_Data { WIDTH, HEIGHT, CHANNELS, INVALID 29,425
    u32 extras[extras30,484
enum Read_Flags 36,598
enum Read_Flags {RECORD RECORD36,598
template <typename T> struct File_Proc_Wrapper44,752
    T proc;46,803
    execute(49,840
attach_update_proc(56,917

load.hpp,283
enum Vertex_Attribute_Bits 6,76
enum Vertex_Attribute_Bits {POSITION POSITION6,76
			    , NORMAL 7,123
			    , UVS 8,149
			    , COLOR 9,172
struct Terrain_Mesh_Instance17,351
    f32 *ys;ys19,384
    Vulkan_API::Model model;21,400
    Vulkan_API::Buffer ys_gpu;22,430

rendering.hpp,1394
namespace Rendering13,584
    struct Rendering_State16,614
	Vulkan_API::Registered_Render_Pass test_render_pass;18,649
	Vulkan_API::Registered_Descriptor_Set_Layout descriptor_set_layout;19,704
	Vulkan_API::Registered_Graphics_Pipeline graphics_pipeline;20,774
	Vulkan_API::Registered_Command_Pool graphics_command_pool;21,836
	Vulkan_API::Registered_Image2D depth_image;22,897
	Vulkan_API::Registered_Model test_model;23,943
	Vulkan_API::Registered_Image2D texture;24,986
	Vulkan_API::Registered_Buffer uniform_buffers;26,1030
	Vulkan_API::Registered_Descriptor_Set descriptor_sets;27,1079
	Vulkan_API::Registered_Command_Buffer command_buffers;29,1138
	Vulkan_API::Registered_Semaphore image_ready_semaphores;31,1197
	Vulkan_API::Registered_Semaphore render_finished_semaphores;32,1256
	Vulkan_API::Registered_Fence fences;33,1319
    struct Renderer_Init_Data45,1626
	Constant_String rndr_id;47,1664
	s32 mtrl_max;49,1694
	Constant_String ppln_id;50,1710
	Memory_Buffer_View<Constant_String> descriptor_sets;52,1783
	VkShaderStageFlags mtrl_unique_data_stage_dst;54,1840
    struct Material_Data67,2263
	void *data;data69,2296
	Vulkan_API::Registered_Model model;72,2333
	Vulkan_API::Draw_Indexed_Data draw_info;73,2371
    struct Material_Access 76,2423
    struct Material_Access { s32 rndr_id,76,2423
    struct Material_Access { s32 rndr_id, mtrl_id;76,2423

scene.hpp,554
struct Camera9,146
    glm::vec2 mp;11,164
    glm::vec3 p;12,183
    glm::vec3 d;13,213
    glm::vec3 u;14,244
    f32 fov;16,270
    f32 asp;17,284
    f32 n,18,314
    f32 n, f;18,314
    glm::mat4 p_m;20,354
    glm::mat4 v_m;21,374
struct Scene33,546
    Camera user_camera;35,563
    VkCommandPool cmdpool;37,590
    VkCommandBuffer cmdbuf;38,618
    VkSemaphore rndr_finished;39,647
    VkSemaphore img_ready;40,679
    VkFence cpu_wait;41,707
    glm::mat4 object_model_matrix 43,732
    glm::mat4 object_model_matrix2 44,786

vulkan.hpp,7008
#define MAKE_VK_VIEW_TYPES(9,134
namespace Vulkan_API11,232
    struct Registered_Object_Base24,514
	void *p;p27,601
	Constant_String id;28,612
	u32 size;30,636
	Registered_Object_Base(34,695
	~Registered_Object_Base(37,830
    template <typename T> struct Registered_Object51,1177
	T *p;p55,1279
	Constant_String id;56,1287
	u32 size;58,1311
	destroy(61,1344
	extract(65,1456
	separate(68,1583
	operator->(79,1801
	Registered_Object(83,1949
	Registered_Object(84,2071
	Registered_Object(85,2207
	My_Type &operator=(operator=86,2327
	My_Type &operator=(operator=87,2463
	~Registered_Object(89,2584
    using Registered_Graphics_Pipeline	92,2659
    using Registered_Render_Pass	93,2747
    using Registered_Buffer	94,2823
    using Registered_Descriptor_Set_Layout	95,2890
    using Registered_Descriptor_Pool	96,2978
    using Registered_Descriptor_Set	97,3062
    using Registered_Model	98,3144
    using Registered_Command_Pool	99,3209
    using Registered_Command_Buffer 100,3281
    using Registered_Framebuffer	101,3368
    using Registered_Image2D	102,3444
    using Registered_Semaphore 103,3513
    using Registered_Fence 104,3596
    struct Queue_Families106,3681
	complete(112,3785
    struct Swapchain_Details118,3879
	VkSurfaceCapabilitiesKHR capabilities;120,3916
	u32 available_formats_count;121,3957
	VkSurfaceFormatKHR *available_formats;available_formats122,3988
	u32 available_present_modes_count;123,4029
	VkPresentModeKHR *available_present_modes;available_present_modes124,4066
    struct GPU127,4125
	VkPhysicalDevice hardware;129,4148
	VkDevice logical_device;130,4177
	VkPhysicalDeviceMemoryProperties memory_properties;132,4206
	Queue_Families queue_families;134,4262
	VkQueue graphics_queue;135,4295
	VkQueue present_queue;136,4321
	Swapchain_Details swapchain_support;138,4348
	VkFormat supported_depth_format;139,4387
    namespace Memory145,4487
    struct Mapped_GPU_Memory156,4759
	u32 offset;158,4796
	VkDeviceSize size;159,4810
	VkDeviceMemory *memory;memory160,4831
	void *data;data161,4857
	begin(164,4892
	fill(170,5012
	end(176,5124
    struct Buffer182,5209
	VkBuffer buffer;184,5235
	VkDeviceMemory memory;186,5257
	VkDeviceSize size;187,5282
	construct_map(190,5337
    struct Draw_Indexed_Data196,5428
	u32 index_count;198,5465
	u32 instance_count;199,5484
	u32 first_index;200,5506
	u32 vertex_offset;201,5525
	u32 first_instance;202,5546
    init_draw_indexed_data_default(206,5622
    struct Model_Index_Data217,5955
	VkBuffer index_buffer;219,5991
	u32 index_count;221,6019
	u32 index_offset;222,6038
	VkIndexType index_type;223,6058
	init_draw_indexed_data(226,6106
    command_buffer_bind_ibo(240,6459
    command_buffer_bind_vbos(250,6761
    command_buffer_execute_commands(263,7186
    struct Graphics_Pipeline272,7407
	enum Shader_Stages_Bits 274,7444
	enum Shader_Stages_Bits : s32 { VERTEX_SHADER_BIT 274,7444
					  , GEOMETRY_SHADER_BIT 275,7505
					  , TESSELATION_SHADER_BIT 276,7544
					  , FRAGMENT_SHADER_BIT 277,7586
	s32 stages;279,7629
	const char *base_dir_and_name;base_dir_and_name281,7645
	VkDescriptorSetLayout descriptor_set_layout;283,7680
	VkPipelineLayout layout;285,7730
	VkPipeline pipeline;287,7759
    command_buffer_push_constant(291,7827
    struct Image2D315,8368
	VkFormat format;322,8567
	get_memory_requirements(325,8619
    struct Swapchain369,9877
	VkFormat format;371,9906
	VkPresentModeKHR present_mode;372,9925
	VkSwapchainKHR swapchain;373,9958
	VkExtent2D extent;374,9986
	Memory_Buffer_View<VkImage> imgs;376,10010
	Memory_Buffer_View<VkImageView> views;377,10046
    struct Render_Pass380,10101
	VkRenderPass render_pass;382,10132
	u32 subpass_count;383,10160
    init_attachment_description(387,10241
    init_attachment_reference(406,10915
    init_subpass_description(416,11161
    init_subpass_dependency(431,11787
    init_clear_color_color(455,12481
    init_clear_color_depth(463,12664
    init_render_area(471,12830
    command_buffer_end_render_pass(492,13467
    struct Model_Binding511,14142
	VkBuffer buffer;514,14218
	u32 binding;515,14237
	VkVertexInputRate input_rate;516,14252
	begin_attributes_creation(523,14404
	push_attribute(530,14573
	end_attributes_creation(543,14910
    struct Model550,15055
	u32 binding_count;553,15100
	Model_Binding *bindings;bindings555,15159
	u32 attribute_count;557,15207
	VkVertexInputAttributeDescription *attributes_buffer;attributes_buffer559,15307
	Model_Index_Data index_data;561,15365
	Memory_Buffer_View<VkBuffer> raw_cache_for_rendering;563,15398
	create_binding_descriptions(566,15493
	create_vertex_input_state_info(581,16029
	create_vbo_list(594,16547
	copy(605,16780
    command_buffer_draw_indexed(620,17493
    command_buffer_draw(632,17813
    command_buffer_bind_pipeline(646,18064
    init_shader_pipeline_info(656,18368
    init_pipeline_vertex_input_info(667,18742
    init_attribute_description(674,19018
    init_binding_description(690,19389
    init_pipeline_vertex_input_info(704,19723
    init_pipeline_input_assembly_info(720,20335
    init_viewport(731,20766
    init_rect_2D(746,21109
    init_pipeline_viewport_info(755,21292
    init_pipeline_rasterization_info(768,21750
    init_pipeline_multisampling_info(789,22524
    init_blend_state_attachment(804,23099
    init_pipeline_blending_info(826,23844
    init_pipeline_dynamic_states_info(843,24455
    init_push_constant_range(858,25018
    init_pipeline_depth_stencil_info(869,25286
    free_command_buffer(916,27089
    end_command_buffer(932,27563
    struct Framebuffer986,29058
	VkFramebuffer framebuffer;988,29089
	Memory_Buffer_View<VkImageView> color_attachments;991,29152
	VkImageView depth_attachment;992,29205
    init_descriptor_set_layout_binding(1011,29690
    struct Descriptor_Set1030,30306
	VkDescriptorSetLayout layouts;1032,30340
	VkDescriptorSet set;1033,30373
	init_buffer_descriptor_write(1036,30405
	init_image_descriptor_write(1050,30938
    command_buffer_bind_descriptor_sets(1065,31504
    init_descriptor_set_buffer_info(1086,32121
    init_buffer_descriptor_set_write(1096,32401
    init_input_attachment_descriptor_set_write(1113,32944
    init_image_descriptor_set_write(1130,33496
    init_descriptor_set_image_info(1147,34043
    init_descriptor_pool_size(1157,34350
    struct Descriptor_Pool1165,34535
	VkDescriptorPool pool;1167,34570
    init_semaphore(1182,34924
    init_fence(1195,35262
    wait_fences(1210,35635
    struct Next_Image_Return 1220,35839
    struct Next_Image_Return {VkResult result;1220,35839
    struct Next_Image_Return {VkResult result; u32 image_index;1220,35839
    acquire_next_image(1222,35950
    reset_fences(1244,36574
    struct State1250,36737
	VkInstance instance;1252,36762
	VkDebugUtilsMessengerEXT debug_messenger;1253,36785
	GPU gpu;1254,36829
	VkSurfaceKHR surface;1255,36840
	Swapchain swapchain;1256,36864
